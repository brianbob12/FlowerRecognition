{
  "Name":"InstanceNormalizationNode",
  "Superclass":"Node",
  "Subclasses":[],
  "Description":"Node that does instance normalization. This is normalization across channels.",
  "Properties":[
    {
      "Name":"mean",
      "Type":"Float",
      "Description":"Mean of the normalized outputs. Default 1."
    },
    {
      "Name":"stddev",
      "Type":"Float",
      "Description":"Standard deviation of the normalized outputs. Default 1."
    }
  ],
  "Functions":[
    {
      "Name":"__init__",
      "MandatoryArgs":[],
      "OptionalArgs":[
        {
          "Name":"name",
          "Type":"str",
          "Description":"Sets name property."
        },
        {
          "Name":"protected",
          "Type":"bool",
          "Description":"option to block clear function"
        },
        {
          "Name":"ID",
          "Type":"int",
          "Description":"Sets ID property."
        }
      ],
      "Returns":[],
      "Throws":[],
      "Description":"init function sets up key variables."
    },
    {
      "Name":"newLayer",
      "MandatoryArgs":[
        {
          "Name":"mean",
          "Type":"Float",
          "Description":"Sets mean property."
        },
        {
          "Name":"stddev",
          "Type":"Float",
          "Description":"Sets stddev property."
        }
      ],
      "OptionalArgs":[],
      "Returns":[],
      "Throws":[],
      "Description":"Creates a new layer instead of importing the layer."
    }, 
    {
      "Name":"connect",
      "MandatoryArgs":[
        {
          "Name":"connections",
          "Type":"List<Node>",
          "Description":"List of nodes. All nodes after first will be ignored"
        }
      ],
      "OptionalArgs":[],
      "Throws":[
        "Elinvar.NN.invalidNodeConnection(receivedShape,requiredShape)"
      ],
      "Returns":[],
      "Description":"Sets specified nodes as inputConnections."
    },
    {
      "Name":"execute",
      "MandatoryArgs":[
        {
          "Name":"inputs",
          "Type":"List<tf.Tensor>",
          "Description":"A tf.Tensor from each input connection."
        }
      ],
      "OptionalArgs":[],
      "Throws":[],
      "Returns":[
        {
          "Type":"tf.Tensor",
          "Description":"Has shape outputShape"
        }
      ],
      "Description":"Performs instance normalization on the last axis of the inputs"
    },
    {
      "Name":"exportNode",
      "MandatoryArgs":[
        {
          "Name":"path",
          "Type":"str",
          "Description":"Path the network is being saved to."
        },
        {
          "Name":"subdir",
          "Type":"str",
          "Description":"Subdirectory within path where this layer is being saved to."
        }
      ],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"str",
          "Description":"The access path used. This is used for overloading."
        }
      ],
      "Throws":[
        "Elinvar.NN.invalidPath(path)"
      ],
      "Description":"Exports ID, and connections. Checks directory existence and validity."
    },
    {
      "Name":"importNode",
      "MandatoryArgs":[
        {
          "Name":"myPath",
          "Type":"str",
          "Description":"Path the network is being saved to. Has to be called myPath to avoid a collision."
        },
        {
          "Name":"subdir",
          "Type":"str",
          "Description":"Subdirectory within path where this layer is being saved to."
        }
      ],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"str",
          "Description":"The access path used. This is used for overloading."
        },
        {
          "Type":"List<int>",
          "Description":"A list of node IDs to connect to this node. This is because the connections can only be resolved when all nodes have been imported."
        }
      ],
      "Throws":[
        "Elinvar.NN.missingDirectoryForImport(path)",
        "Elinvar.NN.invalidDataInFile(filePath)",
        "Elinvar.NN.missingFileForImport(filePath)"
      ],
      "Description":"Imports ID and connections."
    }
  ],
  "Notes":""
}