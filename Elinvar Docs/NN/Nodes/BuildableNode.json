{
  "Name":"BuildableNode",
  "Superclass":"Node",
  "Subclasses":[
    "ConvolutionLayer",
    "DenseLayer",
    "TransposeConvolutionLayer"
  ],
  "Description":"Holds node that require building. Building is done from the top of the networkd down",
  "Properties":[
    {
      "Name":"built",
      "Type":"bool",
      "Description":"Holds if the Node is built currently."
    }
  ],
  "Functions":[
    {
      "Name":"__init__",
      "MandatoryArgs":[],
      "OptionalArgs":[
        {
          "Name":"name",
          "Type":"str",
          "Description":"Sets name property."
        },
        {
          "Name":"protected",
          "Type":"bool",
          "Description":"option to block clear function"
        },
        {
          "Name":"ID",
          "Type":"int",
          "Description":"Sets ID property."
        }
      ],
      "Returns":[],
      "Throws":[],
      "Description":""
    },
    {
      "Name":"build",
      "MandatoryArgs":[],
      "OptionalArgs":[],
      "Returns":[],
      "Throws":[],
      "Description":"Made to be overridden, does different thing for each subclass."
    },
    {
      "Name":"getValue",
      "MandatoryArgs":[],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"Any",
          "Description":"output of shape outputShape"
        }
      ],
      "Throws":[
        "Elinvar.NN.operationWithUnbuiltNode(operation)"
      ],
      "Description":"Returns Node output, will store value for future calls. Made to be overwritten"
    },
    {
      "Name":"execute",
      "MandatoryArgs":[
        {
          "Name":"inputs",
          "Type":"List",
          "Description":"Input has shape=[len(inputConnections)]."
        }
      ],
      "OptionalArgs":[],
      "Returns":[],
      "Throws":[
        "Elinvar.NN.operationWithUnbuiltNode(nodeID,operation)"
      ],
      "Description":"Produces an output based on input connection values."
    },
    {
      "Name":"getTrainableVariables",
      "MandatoryArgs":[],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"List",
          "Description":"By default, empty list. This is overridden by children."
        }
      ],
      "Throws":[
        "Elinvar.NN.operationWithUnbuiltNode(operation)"
      ],
      "Description":"Returns trainable tf.Variables as a list."
    },
    {
      "Name":"exportNode",
      "MandatoryArgs":[
        {
          "Name":"path",
          "Type":"str",
          "Description":"Path the network is being saved to."
        },
        {
          "Name":"subdir",
          "Type":"str",
          "Description":"Subdirectory within path where this layer is being saved to."
        }
      ],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"str",
          "Description":"The access path used. This is used for overloading."
        }
      ],
      "Throws":[
        "Elinvar.NN.invalidPath(path)",
        "Elinvar.NN.operationWithUnbuiltNode(nodeID,operation)"
      ],
      "Description":"Exports ID, and connections. Checks directory existence and validity."
    },
    {
      "Name":"importNode",
      "MandatoryArgs":[
        {
          "Name":"myPath",
          "Type":"str",
          "Description":"Path the network is being saved to. Has to be called myPath to avoid a collision."
        },
        {
          "Name":"subdir",
          "Type":"str",
          "Description":"Subdirectory within path where this layer is being saved to."
        }
      ],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"str",
          "Description":"The access path used. This is used for overloading."
        },
        {
          "Type":"List<int>",
          "Description":"A list of node IDs to connect to this node. This is because the connections can only be resolved when all nodes have been imported."
        }
      ],
      "Throws":[
        "Elinvar.NN.missingDirectoryForImport(path)",
        "Elinvar.NN.invalidDataInFile(filePath)",
        "Elinvar.NN.missingFileForImport(filePath)"
      ],
      "Description":"Imports ID and connections."
    }
  ],
  "Notes":""
}