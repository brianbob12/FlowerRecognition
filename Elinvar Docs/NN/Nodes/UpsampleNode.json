{
  "Name":"UpsampleNode",
  "Superclass":"Node",
  "Subclasses":[],
  "Description":"Upsamples using bilinear interpolation.",
  "Properties":[
    {
      "Name":"imported",
      "Type":"bool",
      "Description":"Weather this node has been imported. Used for verifying outputShape."
    },
    {
      "name":"newHeight",
      "type":"int",
      "description":"Height of output image."
    },
    {
      "name":"newWidth",
      "type":"int",
      "description":"Width of output image."
    }
  ],
  "Functions":[
    {
      "Name":"__init__",
      "MandatoryArgs":[],
      "OptionalArgs":[
        {
          "Name":"name",
          "Type":"Optional[str]",
          "Description":"Sets name property."
        },
        {
          "Name":"protected",
          "Type":"bool",
          "Description":"option to block clear function"
        },
        {
          "Name":"ID",
          "Type":"int",
          "Description":"Sets ID property."
        }
      ],
      "Returns":[],
      "Throws":[],
      "Description":"init function sets up key variables."
    },
    {
      "Name":"connect",
      "MandatoryArgs":[
        {
          "Name":"connections",
          "Type":"List[Node]",
          "Description":"A list of nodes to connect to."
        }
      ],
      "OptionalArgs":[],
      "Returns":[],
      "Throws":[
        "Elinvar.NN.invalidNumberOfNodeInputs",
        "Elinvar.NN.invalidNodeInputShape"
      ],
      "Description":"Connects to a single node with shape: batch + [Any,Any,Any]."
    },
    {
      "Name":"execute",
      "MandatoryArgs":[
        {
          "Name":"inputs",
          "Type":"List[tf.Tensor]",
          "Description":"Input has shape batch + [x,y,channels]" 
        }
      ],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"tf.Tensor",
          "Description":"Has shape:batch + [None]"
        }
      ],
      "Description":"Upsamples each chanel with bilinear interpolation."
    },
    {
      "Name":"importNode",
      "MandatoryArgs":[
        {
          "Name":"myPath",
          "Type":"str",
          "Description":"Path the network is being saved to."
        },
        {
          "Name":"subdir",
          "Type":"str",
          "Description":"Subdirectory within path where this layer is being saved to."
        }
      ],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"str",
          "Description":"The access path used. This is used for overloading."
        },
        {
          "Type":"List<int>",
          "Description":"A list of node IDs to connect to this node. This is because the connections can only be resolved when all nodes have been imported."
        }
      ],
      "Throws":[
        "Elinvar.NN.invalidPath(path)",
        "Elinvar.NN.missingFileForImport(path,fileName)",
        "Elinvar.NN.missingDirectoryForImport(path)"
      ],
      "Description":"Loads this layer from a specified folder. This does not build the node. The node must have connections set before using this function."
    },
    {
      "Name":"exportNode",
      "MandatoryArgs":[
        {
          "Name":"path",
          "Type":"str",
          "Description":"Path the network is being saved to."
        },
        {
          "Name":"subdir",
          "Type":"str",
          "Description":"Subdirectory within path where this layer is being saved to."
        }
      ],
      "OptionalArgs":[],
      "Returns":[
        {
          "Type":"str",
          "Description":"The access path used. This is used for overloading."
        }
      ],
      "Throws":[
        "Elinvar.NN.invalidPath(path)"
      ],
      "Description":"Exports ID, and connections. Checks directory existence and validity."
    }
  ],
  "Notes":""
}